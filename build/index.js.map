{"version":3,"sources":["index.js"],"names":[],"mappings":"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","file":"index.js","sourcesContent":["/*!\n * Chinese lunar calendar converter\n * Support date from 1891.01.01 to 2100.12.31\n *\n * @author Lin Lou <lin.lou@hotmail.com>\n * @license MIT\n */\n\nimport _ from 'lodash';\nimport data from './data';\n\nfunction extract(bin, info) {\n  info.map = bin & ((1 << 13) - 1);\n  info.day = (bin >> 13) & 31;\n  info.month = bin >> 18 & 1;\n  info.leapMonth = (bin >> 20) & 15;\n  info.hasLeapMonth = !!(bin & 1 << 19);\n}\n\n/* // not accurate, don't use\nfunction getSolarPeriods(date) {\n  let periods = [];\n  let diffTime = 31556925974.7 * (date.getFullYear() - 1890) + new Date(1890, 0, 5, 16, 2, 31).getTime();\n  for (let index = 0; index < 24; index = index + 1) {\n    let newDate = new Date(diffTime + data.solarPeriodsMap[index] * 60000);\n    periods[(index + 22) % 24] = newDate;\n  }\n\n  return periods;\n}\n*/\n\nfunction extend(lunarDate) {\n  let offsetYear = lunarDate.year - 1890 + 26;\n  /*\n  let date = lunarDate._date;\n  let offsetMonth = (date.getFullYear() - 1890) * 12 + date.getMonth() + 12;\n  let offsetDay = Date.UTC(date.getFullYear(), date.getMonth(), date.getDate()) / 86400000 + 29219 + 18;\n  */\n\n  lunarDate.gYear = offsetYear % 10;\n  lunarDate.zYear = offsetYear % 12;\n  /*\n  lunarDate.gMonth = offsetMonth % 10;\n  lunarDate.zMonth = offsetMonth % 12;\n  lunarDate.gDay = offsetDay % 10;\n  lunarDate.zDay = offsetDay % 12;\n  lunarDate.solarPeriods = getSolarPeriods(date);\n  */\n\n  lunarDate.animal = lunarDate.zYear;\n  return lunarDate;\n}\n\nfunction convertSolar(lunarDate) {\n  let sy = lunarDate._date.getFullYear();\n  let sm = lunarDate._date.getMonth();\n  let sd = lunarDate._date.getDate();\n  let map = data.map;\n\n  let index = sy - data.YEAR_MIN;\n  let yearInfo = {};\n\n  lunarDate.year = sy;\n  extract(map[index], yearInfo);\n\n  if (sm < yearInfo.month || (sm === yearInfo.month && sd < yearInfo.day)) {\n    index = index - 1;\n    lunarDate.year = sy - 1;\n    extract(map[index], yearInfo);\n  }\n\n  let firstDay = new Date(lunarDate.year, yearInfo.month, yearInfo.day);\n  let diffDays = (lunarDate._date.getTime() - firstDay.getTime()) / 86400000 >> 0;\n  let days = 0;\n  let lunarDays = 0;\n  let m = 0;\n\n  while (m < 14) {\n    lunarDays = (yearInfo.map & 1 << m) ? 30 : 29;\n    days = days + lunarDays;\n    if (diffDays < days) {\n      lunarDate.day = lunarDays - (days - diffDays) + 1;\n      break;\n    }\n\n    m = m + 1;\n  }\n\n  lunarDate.leap = false;\n  if (yearInfo.hasLeapMonth) {\n    if (m === yearInfo.leapMonth + 1) {\n      lunarDate.leap = true;\n    }\n\n    if (m > yearInfo.leapMonth) {\n      m = m - 1;\n    }\n  }\n\n  lunarDate.month = m;\n  extend(lunarDate);\n\n  return lunarDate;\n}\n\nfunction convertLunar(lunarDate) {\n  let index = lunarDate.year - data.YEAR_MIN;\n  let yearInfo = {};\n  let m = 0;\n  let days = 0;\n  let toMonth = lunarDate.month;\n\n  extract(data.map[index], yearInfo);\n\n  if (yearInfo.hasLeapMonth && (lunarDate.month > yearInfo.leapMonth || (lunarDate.leap && lunarDate.month === yearInfo.leapMonth))) {\n    toMonth = toMonth + 1;\n  }\n\n  if (!yearInfo.hasLeapMonth || (yearInfo.hasLeapMonth && lunarDate.month !== yearInfo.leapMonth)) {\n    lunarDate.leap = false;\n  }\n\n  while (m < toMonth) {\n    days = days + ((yearInfo.map & 1 << m) ? 30 : 29);\n    m = m + 1;\n  }\n\n  days = days + lunarDate.day - 1;\n\n  let firstDay = new Date(lunarDate.year, yearInfo.month, yearInfo.day);\n  lunarDate._date = new Date(firstDay.getTime() + days * 86400000);\n  extend(lunarDate);\n\n  return lunarDate;\n}\n\nclass Lunar {\n  constructor(date) {\n    if (!date) {\n      return this;\n    }\n\n    if (date instanceof Date) {\n      this._date = date;\n      convertSolar(this);\n    } else {\n      if (date instanceof Array) {\n        this.year = date[0] >> 0;\n        this.month = date[1] >> 0;\n        this.day = date[2] >> 0;\n        this.leap = !!date[3];\n      } else {\n        this.year = date.year >> 0;\n        this.month = date.month >> 0;\n        this.day = date.day >> 0;\n        this.leap = !!date.leap;\n      }\n\n      convertLunar(this);\n    }\n\n    return this;\n  }\n\n  convert() {\n    return convertSolar(this);\n  }\n\n  toDate() {\n    return this._date;\n  }\n\n  isValid() {\n    return !!this._date;\n  }\n\n  format(f) {\n    if (!this._date) {\n      return 'Invalid Date';\n    }\n\n    f = f || '农历gYzY年MD';\n\n    return f.replace('gY', data.heavenlyStems[this.gYear])\n      .replace('zY', data.earthlyBranches[this.zYear])\n      .replace('gM', data.heavenlyStems[this.gMonth])\n      .replace('zM', data.earthlyBranches[this.zMonth])\n      .replace('gD', data.heavenlyStems[this.gDay])\n      .replace('zD', data.earthlyBranches[this.zDay])\n      .replace('M', (this.leap ? '闰' : '') + data.monthNames[this.month])\n      .replace('D', data.dayNames[this.day]);\n  }\n\n  toJSON(options) {\n    let _this = this;\n    if (options.chinese) {\n      _this = {\n        year: data.heavenlyStems[this.gYear] + data.earthlyBranches[this.zYear],\n        month: data.monthNames[this.month],\n        day: data.dayNames[this.day],\n        gYear: data.heavenlyStems[this.gYear],\n        zYear: data.earthlyBranches[this.zYear],\n        /*gMonth: data.heavenlyStems[this.gMonth],\n        zMonth: data.earthlyBranches[this.zMonth],\n        gDay: data.heavenlyStems[this.gDay],\n        zDay: data.earthlyBranches[this.zDay],*/\n        animal: data.animals[this.animal],\n        leap: this.leap ? '闰' : ''\n      };\n    }\n\n    if (options.type === 'array') {\n      return [_this.year, _this.month, _this.day, _this.leap];\n    }\n\n    return _.pick(_this, ['year', 'month', 'day', 'leap', 'gYear', 'zYear', /*'gMonth', 'zMonth', 'gDay', 'zDay',*/ 'animal']);\n  }\n\n  toString() {\n    return this.format();\n  }\n}\n\nlet lunar = function(date) {\n  if (!date) {\n    date = new Date();\n  } else if (date instanceof Date || date instanceof Array || date instanceof Object) {\n    date = date;\n  } else {\n    throw new Error('date parameter must be Date/Array/Object');\n  }\n\n  return new Lunar(date);\n};\n\nexport default lunar;\n"],"sourceRoot":"/source/"}